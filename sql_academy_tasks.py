# -*- coding: utf-8 -*-
"""sql_academy_tasks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sOEesPELY-AlDNvxizk5yEqeJwmK47jd

ССЫЛКА НА ИСТОЧНИК ЗАДАЧ: https://sql-academy.org/ru/trainer

Задание 1

Вывести имена всех людей, которые есть в базе данных авиакомпаний
"""

SELECT p.name
FROM Passenger as p

"""Задание 2

Вывести названия всеx авиакомпаний
"""

SELECT c.name
FROM Company as c

"""Задание 3

Вывести все рейсы, совершенные из Москвы

"""

SELECT t.*
FROM Trip as t
WHERE t.town_from = 'Moscow'

"""Задание 4

Вывести имена людей, которые заканчиваются на "man"
"""

SELECT p.name
FROM Passenger as p
WHERE p.name LIKE '%man'

"""Задание 5

Вывести количество рейсов, совершенных на TU-134
"""

SELECT t.count(*) as count
FROM Trip as t
WHERE t.plane = 'TU-134'

"""Задание 6

Какие компании совершали перелеты на Boeing
"""

SELECT c.name
FROM Company as c
	INNER JOIN Trip as t ON c.id = t.company
WHERE t.plane = 'Boeing'
GROUP BY c.name

"""Задание 7

Вывести все названия самолётов, на которых можно улететь в Москву (Moscow)
"""

SELECT t.plane
FROM Trip as t
WHERE t.town_from = 'Moscow'
GROUP BY t.plane

"""Задание 8

В какие города можно улететь из Парижа (Paris) и сколько времени это займёт?
"""

SELECT t.town_to,
	TIMEDIFF(t.time_in, t.time_out) as flight_time
FROM Trip as t
WHERE t.town_from = 'Paris'

"""Задание 9

Какие компании организуют перелеты из Владивостока (Vladivostok)?
"""

SELECT c.name
FROM Company as c
WHERE c.id IN (
		SELECT t.company
		FROM Trip as t
		WHERE t.town_from = 'Vladivostok'
	)

"""Задание 10

Вывести вылеты, совершенные с 10 ч. по 14 ч. 1 января 1900 г.
"""

SELECT t.*
FROM Trip as t
WHERE t.time_out BETWEEN '1900-01-01 10:00:00' AND '1900-01-01 14:00:00'

"""Задание 11

Вывести пассажиров с самым длинным именем
"""

SELECT p.name
FROM Passenger as p
WHERE LENGTH(p.name) = (
		SELECT MAX(LENGTH(p.name))
		FROM Passenger as p
	)

"""Задание 12

Вывести id и количество пассажиров для всех прошедших полётов
"""

SELECT t.id as trip,
	COUNT(p.passenger) as count
FROM Trip as t
INNER JOIN Pass_in_trip as p ON t.id = p.trip
GROUP BY t.id

"""Задание 13

Вывести имена людей, у которых есть полный тёзка среди пассажиров
"""

SELECT p.name
FROM Passenger as p
GROUP BY p.name
HAVING COUNT(*) > 1

"""Задание 14

В какие города летал Bruce Willis
"""

SELECT t.town_to
FROM Trip as t
INNER JOIN Pass_in_trip as p ON t.id = p.trip
INNER JOIN Passenger as ps ON p.passenger = ps.id
WHERE ps.name = 'Bruce Willis'

"""Задание 15

Выведите дату и время прилёта пассажира Стив Мартин (Steve Martin) в Лондон (London)
"""

SELECT t.time_in
FROM Trip as t
INNER JOIN Pass_in_trip as p ON t.id = p.trip
INNER JOIN Passenger as ps ON p.passenger = ps.id
WHERE ps.name = 'Steve Martin'
AND t.town_to = 'London'

"""Задание 16

Вывести отсортированный по количеству перелетов (по убыванию) и имени (по возрастанию) список пассажиров, совершивших хотя бы 1 полет.
"""

SELECT p.name,
COUNT(pt.trip) as count
FROM Passenger as p
INNER JOIN Pass_in_trip as pt ON p.id = pt.passenger
GROUP BY p.name
ORDER BY COUNT(pt.trip) DESC, p.name

"""Задание 17

Определить, сколько потратил в 2005 году каждый из членов семьи. В результирующей выборке не выводите тех членов семьи, которые ничего не потратили.
"""

SELECT f.member_name, f.status, SUM(p.amount * p.unit_price) as costs
FROM FamilyMembers as f
INNER JOIN Payments as p ON f.member_id = p.family_member
WHERE YEAR(p.date) = 2005
GROUP BY f.member_name, f.status

"""Задание 18

Узнать, кто старше всех в семьe
"""

SELECT f.member_name
FROM FamilyMembers as f
WHERE YEAR(f.birthday) = (
		SELECT MIN(YEAR(f.birthday))
		FROM FamilyMembers as f
	)

"""Задание 19

Определить, кто из членов семьи покупал картошку (potato)
"""

SELECT f.status
FROM FamilyMembers as f
INNER JOIN Payments as p ON f.member_id = p.family_member
INNER JOIN Goods as g ON p.good = g.good_id
WHERE g.good_name = 'potato'
GROUP BY f.status

"""Задание 20

Сколько и кто из семьи потратил на развлечения (entertainment). Вывести статус в семье, имя, сумму
"""

SELECT f.status, f.member_name, SUM(p.unit_price * p.amount) as costs
FROM FamilyMembers as f
INNER JOIN Payments as p ON f.member_id = p.family_member
INNER JOIN Goods as g ON p.good = g.good_id
INNER JOIN GoodTypes as gt ON g.type = gt.good_type_id
WHERE gt.good_type_name = 'entertainment'
GROUP BY f.status, f.member_name

"""Задание 21

Определить товары, которые покупали более 1 раза
"""

SELECT g.good_name
FROM Goods as g
INNER JOIN Payments as p ON g.good_id = p.good
GROUP BY g.good_name
HAVING COUNT(*) > 1

"""Задание 22

Найти имена всех матерей (mother)
"""

SELECT f.member_name
FROM FamilyMembers as f
WHERE f.status = 'mother'

"""Задание 23

Найдите самый дорогой деликатес (delicacies) и выведите его цену
"""

SELECT g.good_name, p.unit_price
FROM Goods as g
INNER JOIN Payments as p ON g.good_id = p.good
INNER JOIN GoodTypes as gt ON g.type = gt.good_type_id
WHERE p.unit_price = (
		SELECT MAX(p.unit_price)
		FROM Goods as g
		INNER JOIN Payments as p ON g.good_id = p.good
		INNER JOIN GoodTypes as gt ON g.type = gt.good_type_id
		WHERE gt.good_type_name = 'delicacies'
	)

"""Задание 24

Определить кто и сколько потратил в июне 2005
"""

SELECT f.member_name, SUM(p.unit_price * p.amount) as costs
FROM FamilyMembers as f
INNER JOIN Payments as p ON f.member_id = p.family_member
WHERE YEAR(p.date) = 2005
AND MONTH(p.date) = 06
GROUP BY f.member_name

"""Задание 25

Определить, какие товары не покупались в 2005 году
"""

SELECT g.good_name
FROM Goods as g
WHERE g.good_id NOT IN (
		SELECT p.good
		FROM Payments as p
		WHERE YEAR(p.date) = 2005
	)

"""Задание 26

Определить группы товаров, которые не приобретались в 2005 году
"""

SELECT gt.good_type_name
FROM GoodTypes as gt
WHERE gt.good_type_id NOT IN (
		SELECT g.type
		FROM Goods as g
	  INNER JOIN Payments as p ON g.good_id = p.good
		WHERE YEAR(p.date) = 2005
	)

"""Задание 27

Узнать, сколько потрачено на каждую из групп товаров в 2005 году. Вывести название группы и сумму
"""

SELECT gt.good_type_name, SUM(p.unit_price * p.amount) as costs
FROM GoodTypes as gt
INNER JOIN Goods as g ON gt.good_type_id = g.type
INNER JOIN Payments as p ON g.good_id = p.good
WHERE YEAR(p.date) = 2005
GROUP BY gt.good_type_name

"""Задание 28

Сколько рейсов совершили авиакомпании из Ростова (Rostov) в Москву (Moscow) ?
"""

SELECT COUNT(*) as count
FROM Trip as t
WHERE t.town_from = 'Rostov'
	AND t.town_to = 'Moscow'

"""Задание 29

Выведите имена пассажиров улетевших в Москву (Moscow) на самолете TU-134
"""

SELECT p.name
FROM Passenger as p
INNER JOIN Pass_in_trip as pt ON p.id = pt.passenger
INNER JOIN Trip as t ON pt.trip = t.id
WHERE t.plane = 'TU-134'
AND t.town_to = 'Moscow'
GROUP BY p.name

"""Задание 30

Выведите нагруженность (число пассажиров) каждого рейса (trip).<br>
Результат вывести в отсортированном виде по убыванию нагруженности.
"""

SELECT t.id as trip, COUNT(pt.passenger) as count
FROM Trip as t
INNER JOIN Pass_in_trip as pt ON t.id = pt.trip
GROUP BY t.id
ORDER BY 2 DESC

"""Задание 31

Вывести всех членов семьи с фамилией Quincey.
"""

SELECT *
FROM FamilyMembers as f
WHERE member_name LIKE '%Quincey%'

"""Задание 32

Вывести средний возраст людей (в годах), хранящихся в базе данных. Результат округлите до целого в меньшую сторону.
"""

SELECT ROUND(AVG(YEAR(CURDATE()) - YEAR(f.birthday))) as age
FROM FamilyMembers as f

"""Задание 33

Найдите среднюю стоимость икры. В базе данных хранятся данные о покупках красной (red caviar) и черной икры (black caviar).
"""

SELECT AVG(p.unit_price) as cost
FROM Payments as p
WHERE p.good IN (
		SELECT g.good_id
		FROM Goods as g
		WHERE g.good_name LIKE '%caviar%'
	)

"""Задание 34

Сколько всего 10-ых классов
"""

SELECT COUNT(c.name) as count
FROM Class as c
WHERE c.name LIKE '%10%'

"""Задание 35

Сколько различных кабинетов школы использовались 2.09.2019 в образовательных целях ?
"""

SELECT COUNT(s.classroom) as count
FROM Schedule as s
WHERE s.date = '2019-09-02'

"""Задание 36

Выведите информацию об обучающихся живущих на улице Пушкина (ul. Pushkina)?
"""

SELECT *
FROM Student as s
WHERE s.address LIKE '%ul. Pushkina%'

"""Задание 37

Сколько лет самому молодому обучающемуся ?
"""

SELECT MIN(TIMESTAMPDIFF(YEAR, s.birthday, CURDATE())) as year
FROM Student as s

"""Задание 38

Сколько Анн (Anna) учится в школе ?
"""

SELECT COUNT(s.first_name) as count
FROM Student as s
WHERE s.first_name = 'Anna'

"""Задание 39

Сколько обучающихся в 10 B классе ?
"""

SELECT COUNT(*) as count
FROM Student_in_class as sc
INNER JOIN Class as c ON sc.class = c.id
WHERE c.name = '10 B'

"""Задание 40

Выведите название предметов, которые преподает Ромашкин П.П. (Romashkin P.P.) ?
"""

SELECT s.name as subjects
FROM Subject as s
INNER JOIN Schedule as sc ON s.id = sc.subject
INNER JOIN Teacher as t ON sc.teacher = t.id
WHERE t.last_name LIKE '%Romashkin%'

"""Задание 41

Во сколько начинается 4-ый учебный предмет по расписанию ?
"""

SELECT t.start_pair
FROM Timepair as t
WHERE t.id IN (
		SELECT s.number_pair
		FROM Schedule as s
		WHERE s.number_pair = 4
	)

"""Задание 42

Сколько времени обучающийся будет находиться в школе, учась со 2-го по 4-ый уч. предмет ?
"""

SELECT DISTINCT TIMEDIFF(
		(
			SELECT t.end_pair
			FROM Timepair as t
			WHERE id = 4
		),
		(
			SELECT t.start_pair
			FROM Timepair as t
			where id = 2
		)
	) as time
FROM Timepair

"""Задание 43

Выведите фамилии преподавателей, которые ведут физическую культуру (Physical Culture).<br> Отcортируйте преподавателей по фамилии.

"""

SELECT t.last_name
FROM Teacher as t
WHERE t.id IN (
		SELECT s.teacher
		FROM Schedule as s
			INNER JOIN Subject as sb ON s.subject = sb.id
		WHERE sb.name = 'Physical Culture'
	)
ORDER BY t.last_name

"""Задание 44

Найдите максимальный возраст (колич. лет) среди обучающихся 10 классов ?
"""

SELECT MAX(TIMESTAMPDIFF(YEAR, s.birthday, CURDATE())) as max_year
FROM Student as s
WHERE s.id IN (
		SELECT sc.student
		FROM Student_in_class as sc
			INNER JOIN Class as c ON sc.class = c.id
		WHERE c.name LIKE '%10%'
	)

"""Задание 45

Какие кабинеты чаще всего использовались для проведения занятий? <br>Выведите те, которые использовались максимальное количество раз.
"""

SELECT s.classroom
FROM Schedule as s
GROUP BY s.classroom
HAVING COUNT(classroom) = (
		SELECT(COUNT(s.classroom))
		FROM Schedule as s
		GROUP BY s.classroom
		ORDER BY 1 DESC
		LIMIT 1
	)

"""Задание 46

В каких классах введет занятия преподаватель "Krauze" ?
"""

SELECT c.name
FROM Class as c
WHERE c.id IN (
		SELECT s.class
		FROM Schedule as s
			INNER JOIN Teacher as t ON s.teacher = t.id
		WHERE t.last_name = 'Krauze'
	)

"""Задание 47

Сколько занятий провел Krauze 30 августа 2019 г.?
"""

SELECT count(s.subject) as count
FROM Schedule as s
WHERE s.date = '2019-08-30'
	AND s.teacher IN (
		SELECT t.id
		FROM Teacher as t
		WHERE t.last_name = 'Krauze'
	)

"""Задание 48

Выведите заполненность классов в порядке убывания
"""

SELECT c.name,
	COUNT(sc.student) as count
FROM Class as c
	INNER JOIN Student_in_class as sc ON c.id = sc.class
GROUP BY 1
ORDER BY 2 DESC

"""Задание 49

Какой процент обучающихся учится в 10 A классе ?
"""

SELECT (
		(
			SELECT COUNT(sc.student)
			FROM Student_in_class as sc
				INNER JOIN Class as c ON sc.class = c.id
			WHERE c.name = '10 A'
		) / (
			SELECT count(sc.student)
			FROM Student_in_class as sc
		) * 100
	) as percent

"""Задание 50

Какой процент обучающихся родился в 2000 году? Результат округлить до целого в меньшую сторону.
"""

SELECT FLOOR(
		(
			SELECT COUNT(sc.student)
			FROM Student_in_class as sc
				INNER JOIN Student as s ON sc.student = s.id
			WHERE YEAR(s.birthday) = 2000
		) / (
			SELECT COUNT(sc.student)
			FROM Student_in_class as sc
		) * 100
	) as percent

"""Задание 51

Добавьте товар с именем "Cheese" и типом "food" в список товаров (Goods).
"""

INSERT INTO Goods(good_id, good_name, type)
VALUES (
		(
			SELECT COUNT(*) + 1
			FROM Goods as g
		),
		'Cheese',
		(
			SELECT good_type_id
			FROM GoodTypes as gt
			WHERE good_type_name = 'food'
		)
	)

"""Задание 52

Добавьте в список типов товаров (GoodTypes) новый тип "auto".
"""

INSERT INTO GoodTypes(good_type_id, good_type_name)
VALUES (
		(
			SELECT COUNT(*) + 1
			FROM GoodTypes as gt
		),
		'auto'
	)

"""Задание 53

Измените имя "Andie Quincey" на новое "Andie Anthony".
"""

UPDATE FamilyMembers
SET member_name = 'Andie Anthony'
WHERE member_name = 'Andie Quincey'

"""Задание 54

Удалить всех членов семьи с фамилией "Quincey".
"""

DELETE FROM FamilyMembers
WHERE member_name LIKE '%Quincey%'

"""Задание 55

Удалить компании, совершившие наименьшее количество рейсов.
"""

DELETE FROM Company as c
WHERE c.id IN (
		SELECT t.company
		FROM Trip as t
		GROUP BY t.company
		HAVING COUNT(t.id) = (
				SELECT MIN(cnt)
				FROM (
						SELECT COUNT(t.id) as cnt
						FROM Trip as t
						GROUP BY t.company
					) as sub_q
			)
	)

"""Задание 56

Удалить все перелеты, совершенные из Москвы (Moscow).
"""

DELETE FROM Trip as t
WHERE t.town_from = 'Moscow'

"""Задание 57

Перенести расписание всех занятий на 30 мин. вперед.
"""

UPDATE Timepair as t
SET t.start_pair = t.start_pair + INTERVAL 30 MINUTE,
	t.end_pair = t.end_pair + INTERVAL 30 MINUTE

"""Задание 58

Добавить отзыв с рейтингом 5 на жилье, находящиеся по адресу "11218, Friel Place, New York", от имени "George Clooney"
"""

INSERT INTO Reviews
VALUES(
		(
			SELECT COUNT(*) + 1
			FROM Reviews as r
		),
		(
			SELECT r.id
			FROM Reservations as r
				INNER JOIN Users as u ON r.user_id = u.id
				INNER JOIN Rooms as rm ON r.room_id = rm.id
			WHERE rm.address = '11218, Friel Place, New York'
				AND u.name = 'George Clooney'
		),
		5
	)

"""Задание 59

Вывести пользователей,указавших Белорусский номер телефона ? Телефонный код Белоруссии +375.
"""

SELECT *
FROM Users as u
WHERE u.phone_number LIKE '%+375%'

"""Задание 60

Выведите идентификаторы преподавателей, которые хотя бы один раз за всё время преподавали в каждом из 11-х классов.
"""

SELECT s.teacher
FROM Schedule as s
INNER JOIN Class as c ON s.class = c.id
WHERE c.name LIKE '%11%'
GROUP BY s.teacher
HAVING COUNT(DISTINCT c.name) > 1

"""Задание 61

Выведите список комнат, которые были зарезервированы в течение 12 недели 2020 года.

"""

SELECT r.*
FROM Rooms as r
INNER JOIN Reservations as rs ON r.id = rs.room_id
WHERE WEEK(rs.start_date, 1) = 12
AND YEAR(rs.start_date) = 2020

"""Задание 62

Вывести в порядке убывания популярности доменные имена 2-го уровня, используемые пользователями для электронной почты. Полученный результат необходимо дополнительно отсортировать по возрастанию названий доменных имён.
"""

SELECT SUBSTRING_INDEX(u.email, '@', -1) as domain,
	COUNT(SUBSTRING_INDEX(u.email, '@', -1)) as count
FROM Users as u
GROUP BY 1
ORDER BY 2 DESC, 1

"""Задание 63

Выведите отсортированный список (по возрастанию) фамилий и имен студентов в виде Фамилия.И.
"""

SELECT CONCAT(s.last_name, '.', LEFT(s.first_name, 1), '.') as name
FROM Student as s
ORDER BY 1

"""Задание 64

Вывести количество бронирований по каждому месяцу каждого года, в которых было хотя бы 1 бронирование. <br>Результат отсортируйте в порядке возрастания даты бронирования.
"""

SELECT YEAR(r.start_date) as year,
	MONTH(r.start_date) as month,
	COUNT(*) as amount
FROM Reservations as r
GROUP BY 1, 2
ORDER BY 1, 2

"""Задание 65

Необходимо вывести рейтинг для комнат, которые арендовали, как среднее значение рейтинга отзывов округленное до целого вниз.
"""

SELECT r.room_id,
	FLOOR(AVG(rw.rating)) as rating
FROM Reservations as r
INNER JOIN Reviews as rw ON r.id = rw.reservation_id
GROUP BY 1

"""Задание 66

Вывести список комнат со всеми удобствами (наличие ТВ, интернета, кухни и кондиционера), а также общее количество дней и сумму за все дни аренды каждой из таких комнат.
"""

SELECT r.home_type,
	r.address,
	IFNULL(
		SUM(TIMESTAMPDIFF(DAY, rv.start_date, rv.end_date)),
		0
	) as days,
	IFNULL(SUM(rv.total), 0) as total_fee
FROM Rooms as r
	LEFT JOIN Reservations as rv ON rv.room_id = r.id
WHERE (
		r.has_tv,
		r.has_internet,
		r.has_kitchen,
		r.has_air_con
	) = (1, 1, 1, 1)
GROUP BY 1

"""Задание 67

Вывести время отлета и время прилета для каждого перелета в формате "ЧЧ:ММ, ДД.ММ - ЧЧ:ММ, ДД.ММ", где часы и минуты с ведущим нулем, а день и месяц без.

"""

SELECT CONCAT(
		DATE_FORMAT(t.time_out, '%H:%i, %e.%c'),
		' - ',
		DATE_FORMAT(t.time_in, '%H:%i, %e.%c')
	) as flight_time
FROM Trip as t

"""Задание 68

Для каждой комнаты, которую снимали как минимум 1 раз, найдите имя человека, снимавшего ее последний раз, и дату, когда он выехал
"""

SELECT r.room_id,
	u.name,
	r.end_date
FROM Reservations as r
INNER JOIN Users as u ON r.user_id = u.id
WHERE r.end_date IN (
		SELECT MAX(r.end_date)
		FROM Reservations as r
		GROUP BY r.room_id
	)

"""Задание 69

Вывести идентификаторы всех владельцев комнат, что размещены на сервисе бронирования жилья и сумму, которую они заработали
"""

SELECT r.owner_id,
	IFNULL(SUM(rv.total), 0) as total_earn
FROM Rooms as r
	LEFT JOIN Reservations as rv ON r.id = rv.room_id
GROUP BY 1

"""Задание 70

Необходимо категоризовать жилье на economy, comfort, premium по цене соответственно <= 100, 100 < цена < 200, >= 200. В качестве результата вывести таблицу с названием категории и количеством жилья, попадающего в данную категорию
"""

SELECT CASE
		WHEN r.price <= 100 THEN 'economy'
		WHEN r.price > 100
		AND r.price < 200 THEN 'comfort'
		WHEN r.price >= 200 THEN 'premium'
	END AS category,
	COUNT(r.id) as count
FROM Rooms as r
GROUP BY 1

"""Задание 71

Найдите какой процент пользователей, зарегистрированных на сервисе бронирования, хоть раз арендовали или сдавали в аренду жилье. Результат округлите до сотых.
"""

WITH active_users as (
	SELECT DISTINCT r.owner_id
	FROM Rooms as r
		INNER JOIN Reservations as rv ON r.id = rv.room_id
	UNION
	SELECT DISTINCT rv.user_id
	FROM Reservations as rv
),
all_users as (
	SELECT DISTINCT(u.id)
	FROM Users as u
)
SELECT ROUND(
		(
			SELECT COUNT(*)
			FROM active_users
		) / (
			SELECT COUNT(*)
			FROM all_users
		) * 100,
		2
	) as percent

"""Задание 72

Выведите среднюю стоимость бронирования для комнат, которых бронировали хотя бы один раз. Среднюю стоимость необходимо округлить до целого значения вверх.
"""

SELECT r.room_id,
	CEILING(AVG(r.price)) as avg_price
FROM Reservations as r
GROUP BY 1

"""Задание 73

Выведите id тех комнат, которые арендовали нечетное количество раз
"""

SELECT r.room_id,
	COUNT(r.start_date) as count
FROM Reservations as r
GROUP BY r.room_id
HAVING count % 2 != 0

"""Задание 74

Выведите идентификатор и признак наличия интернета в помещении. Если интернет в сдаваемом жилье присутствует, то выведите «YES», иначе «NO».
"""

SELECT r.id,
	CASE
		WHEN r.has_internet = 1 THEN 'YES'
		ELSE 'NO'
	END as has_internet
FROM Rooms as r

"""Задание 75

Выведите фамилию, имя и дату рождения студентов, кто был рожден в мае.
"""

SELECT s.last_name,
	s.first_name,
	s.birthday
FROM Student as s
WHERE MONTH(s.birthday) = 05

"""Задание 76

Вывести имена всех пользователей сервиса бронирования жилья, а также два признака: является ли пользователь собственником какого-либо жилья (is_owner) и является ли пользователь арендатором (is_tenant). В случае наличия у пользователя признака необходимо вывести в соответствующее поле 1, иначе 0.
"""

SELECT u.name,
	IF( u.id IN (SELECT DISTINCT r.owner_id
		           FROM Rooms as r ), 1, 0) as is_owner,
	IF(u.id IN (SELECT DISTINCT rv.user_id
			        FROM Reservations as rv), 1, 0) as is_tenant
FROM Users as u